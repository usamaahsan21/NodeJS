const posts = [
    {title: 'Post one', body : "This is post one"},
    {title: 'Post two', body : "This is post two"}
];

function getposts(){

 setTimeout(() => {
    posts.forEach((posts)=>{
        console.log(posts.title);
    }); 
 }, 1000);
    
}

function CreatPost(post) {
    return new Promise((resolve,reject)=>{

        setTimeout(() => {
            posts.push(post);
            let error = false;
            if (!error){
                resolve();
            } else {
                reject("Something went wrong");
            }
        }, 2000);

       
    })
};


async function Illustration() {
await    CreatPost({title:"PoST 3" , body: "This is post 3"});
getposts();
}

Illustration();

// async will be a must keyword in order to use async|wait 
// what is happening here is that we create a function with async keyword in which we call create post
// and then by adding the await keyword we are waiting for the createPost to complete its operation and then we call getposts 
// that is why we in output getting all the three posts despite that getpost takes 1 second and createPost takes 2 seconds
